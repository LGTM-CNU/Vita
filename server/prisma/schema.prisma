generator client {
  provider = "prisma-client-js"
}

// 데이터 베이스 연동
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN // 'ADMIN'
  USER // 'USER'
}

// 데이터 베이스 스키마
model User {
  id       String  @id
  password String
  name     String?

  mode          Role       @default(USER)
  medicines     Medicine[]
  alarms        Alarm[]
  adminRelation Relation[] @relation("AdminRelation")
  userRelation  Relation[] @relation("UserRelation")
  // chats         Chat[]


  fcmToken     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Medicine {
  id          Int     @id @default(autoincrement())
  name        String
  type        String?
  description String?
  thumbnail   String?
  repeat      String?

  userId      String
  user        User    @relation(fields: [userId], references: [id])
  alarms      Alarm[]
  chats       Chat[]
  time        Time[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Time {
  id         Int      @id @default(autoincrement())

  time       String
  medicineId Int
  medicine   Medicine @relation(fields: [medicineId], references: [id], onDelete: Cascade)

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Relation { 
  id        Int      @id @default(autoincrement())

  adminId   String?   @unique
  admin     User?     @relation("AdminRelation", fields: [adminId], references: [id])
  userId    String?   @unique
  user      User?     @relation("UserRelation", fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Alarm {
  id         Int      @id @default(autoincrement())

  user       User     @relation(fields: [userId], references: [id])
  userId     String   

  medicine   Medicine @relation(fields: [medicineId], references: [id])
  medicineId Int

  time       String
  repeat     String   // 0000000

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Chat {
  id          Int      @id @default(autoincrement())

  destination String
  content     String 
  talker      String
  alarmed     Boolean  @default(false)
  isVoice     String?

  // user        User     @relation(fields: [userId], references: [id])
  userId      String
  medicine    Medicine? @relation(fields: [medicineId], references: [id])
  medicineId  Int?

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

