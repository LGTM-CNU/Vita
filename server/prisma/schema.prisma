generator client {
  provider = "prisma-client-js"
}

// 데이터 베이스 연동
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN // 'ADMIN'
  USER // 'USER'
}

// 데이터 베이스 스키마
model User {
  id       String  @id
  password String
  name     String?

  mode          Role       @default(USER)
  medicines     Medicine[]
  alarms        Alarm[]
  adminRelation Relation[] @relation("AdminRelation")
  userRelation  Relation[] @relation("UserRelation")
  chats         Chat[]

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Medicine {
  id          Int     @id @default(autoincrement())
  name        String
  type        String?
  description String?
  thumbnail   String?

  user        User    @relation(fields: [userId], references: [id])
  userId      String
  alarms      Alarm[]
  chats       Chat[]

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Relation { 
  id        Int      @id @default(autoincrement())

  adminId   String
  admin     User     @relation("AdminRelation", fields: [adminId], references: [id])
  patientId String
  patient   User     @relation("UserRelation", fields: [patientId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Alarm {
  id         Int      @id @default(autoincrement())

  user       User     @relation(fields: [userId], references: [id])
  userId     String

  medicine   Medicine @relation(fields: [medicineId], references: [id])
  medicineId Int

  time       String
  repeat     String   // 0000000

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Chat {
  id         Int      @id @default(autoincrement())

  content    String 
  talker     String
  alarmed    Boolean  @default(false)
  isVoice    Boolean  @default(false)

  user       User     @relation(fields: [userId], references: [id])
  userId     String
  medicine   Medicine @relation(fields: [medicineId], references: [id])
  medicineId Int

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Todo {
  id Int @id @default(autoincrement())
}
